{
  /*
    TypeScript is being used to do type checking across both JavaScript and TypeScript file.
    In particular, this picks up some problems in the JSDoc in the JavaScript files, and validates the code
    is consistent with the JSDoc.

    A complication is that TypeScript does not directly support different config for .ts/.js. To avoid drowning
    in strict errors that are tedious to avoid in JavaScript the settings here are not strict. There is a
    another config with strict settings for opt-in use.

    The settings here are used by VSCode, and TypeScript checks are enabled in included JavaScript files.
    eslint supports custom config and uses the strict settings for TypeScript files.
    To strictly check the published type definitions, there is a one script using the strict settings.
  */
  /* Visit https://aka.ms/tsconfig to read more about tsconfig configuration. */
  "compilerOptions": {
    "module": "commonjs",
    "target": "es2019",

    "strict": true,
    /* less strict settings to avoid excessive work in JavaScript */
    "noImplicitAny": false,
    "noImplicitThis": false,

    "types": [
      "node",
      "jest"
    ],
    "noEmit": true, /* just type checking and not emitting transpiled files */
    "forceConsistentCasingInFileNames": true,
    "allowJs": true,
    "checkJs": true,
    "esModuleInterop": true
  },
  "include": [
    /* opt-in JavaScript */
    "*.js",
    "*.mjs",
    "lib/**/*.js",
    /* all the TypeScript */
    "**/*.ts",
    "**/*.mts"
  ],
}
